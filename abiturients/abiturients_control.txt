-- database: d:\py_learning\learning_SQL\abiturients\abiturients_base.db
-- Use the ▷ button in the top right corner to run the entire file.
CREATE TABLE
    department (
        department_id INTEGER PRIMARY KEY AUTOINCREMENT,
        name_department VARCHAR(30)
    );

CREATE TABLE
    subject (
        subject_id INTEGER PRIMARY KEY AUTOINCREMENT,
        name_subject VARCHAR(30)
    );

CREATE TABLE
    program (
        program_id INTEGER PRIMARY KEY AUTOINCREMENT,
        name_program VARCHAR(50),
        department_id INTEGER,
        plan INTEGER,
        FOREIGN KEY (department_id) REFERENCES department (department_id) ON DELETE CASCADE
    );

CREATE TABLE
    enrollee (
        enrollee_id INTEGER PRIMARY KEY AUTOINCREMENT,
        name_enrollee VARCHAR(50)
    );

/*включает все достижения, которые учитываются при поступлении в университет, в последнем столбце указывается количество баллов, которое добавляется к сумме баллов по предметам ЕГЭ при расчете общего балла абитуриента*/
CREATE TABLE
    achievement (
        achievement_id INTEGER PRIMARY KEY AUTOINCREMENT,
        name_achievement VARCHAR(30),
        bonus INTEGER
    );

/*информация о том, какие достижения имеют абитуриенты*/
CREATE TABLE
    enrollee_achievement (
        enrollee_achiev_id INTEGER PRIMARY KEY AUTOINCREMENT,
        enrollee_id INTEGER,
        achievement_id INTEGER,
        FOREIGN KEY (enrollee_id) REFERENCES enrollee (enrollee_id) ON DELETE CASCADE,
        FOREIGN KEY (achievement_id) REFERENCES achievement (achievement_id) ON DELETE CASCADE
    );

/*какие предметы ЕГЭ необходимы для поступления на каждую программу, в последнем столбце – минимальный балл по каждому предмету для образовательной программы*/
CREATE TABLE
    program_subject (
        program_subject_id INTEGER PRIMARY KEY AUTOINCREMENT,
        program_id INTEGER,
        subject_id INTEGER,
        min_result INTEGER,
        FOREIGN KEY (program_id) REFERENCES program (program_id) ON DELETE CASCADE,
        FOREIGN KEY (subject_id) REFERENCES subject (subject_id) ON DELETE CASCADE
    );

/*на какую образовательную программу хочет поступить абитуриент*/
CREATE TABLE
    program_enrollee (
        program_enrollee_id INTEGER PRIMARY KEY AUTOINCREMENT,
        program_id INTEGER,
        enrollee_id INTEGER,
        FOREIGN KEY (program_id) REFERENCES program (program_id) ON DELETE CASCADE,
        FOREIGN KEY (enrollee_id) REFERENCES enrollee (enrollee_id) ON DELETE CASCADE
    );

/*баллы ЕГЭ каждого абитуриента*/
CREATE TABLE
    enrollee_subject (
        enrollee_subject_id INTEGER PRIMARY KEY AUTOINCREMENT,
        enrollee_id INTEGER,
        subject_id INTEGER,
        result INTEGER,
        FOREIGN KEY (enrollee_id) REFERENCES enrollee (enrollee_id) ON DELETE CASCADE,
        FOREIGN KEY (subject_id) REFERENCES subject (subject_id) ON DELETE CASCADE
    );

INSERT INTO
    department (name_department)
VALUES
    ('Инженерная школа'),
    ('Школа естественных наук');

INSERT INTO
    subject (name_subject)
VALUES
    ('Русский язык'),
    ('Математика'),
    ('Физика'),
    ('Информатика');

INSERT INTO
    program (name_program, department_id, plan)
VALUES
    ('Прикладная математика и информатика', 2, 2),
    ('Математика и компьютерные науки', 2, 1),
    ('Прикладная механика', 1, 2),
    ('Мехатроника и робототехника', 1, 3);

INSERT INTO
    enrollee (name_enrollee)
VALUES
    ('Баранов Павел'),
    ('Абрамова Катя'),
    ('Семенов Иван'),
    ('Яковлева Галина'),
    ('Попов Илья'),
    ('Степанова Дарья');

INSERT INTO
    achievement (name_achievement, bonus)
VALUES
    ('Золотая медаль', 5),
    ('Серебряная медаль', 3),
    ('Золотой значок ГТО', 3),
    ('Серебряный значок ГТО', 1);

INSERT INTO
    enrollee_achievement (enrollee_id, achievement_id)
VALUES
    (1, 2),
    (1, 3),
    (3, 1),
    (4, 4),
    (5, 1),
    (5, 3);

INSERT INTO
    program_subject (program_id, subject_id, min_result)
VALUES
    (1, 1, 40),
    (1, 2, 50),
    (1, 4, 60),
    (2, 1, 30),
    (2, 2, 50),
    (2, 4, 60),
    (3, 1, 30),
    (3, 2, 45),
    (3, 3, 45),
    (4, 1, 40),
    (4, 2, 45),
    (4, 3, 45);

INSERT INTO
    program_enrollee (program_id, enrollee_id)
VALUES
    (3, 1),
    (4, 2),
    (1, 1),
    (2, 2),
    (1, 2),
    (1, 3),
    (2, 3),
    (4, 3),
    (3, 4),
    (3, 5),
    (4, 5),
    (2, 6),
    (3, 6),
    (4, 6);

INSERT INTO
    enrollee_subject (enrollee_id, subject_id, result)
VALUES
    (1, 1, 68),
    (1, 2, 70),
    (1, 3, 41),
    (1, 4, 75),
    (2, 1, 75),
    (2, 2, 70),
    (2, 4, 81),
    (3, 1, 85),
    (3, 2, 67),
    (3, 3, 90),
    (3, 4, 78),
    (4, 1, 82),
    (4, 2, 86),
    (4, 3, 70),
    (5, 1, 65),
    (5, 2, 67),
    (5, 3, 60),
    (6, 1, 90),
    (6, 2, 92),
    (6, 3, 88),
    (6, 4, 94);

INSERT INTO enrollee_subject (enrollee_id, subject_id, result) VALUES (2, 3, 41);    
